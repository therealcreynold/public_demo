apiVersion: management.cattle.io/v3
kind: Cluster
metadata:
  annotations:
    authz.management.cattle.io/creator-role-bindings: '{"created":["cluster-owner"],"required":["cluster-owner"]}'
    field.cattle.io/creatorId: user-2gp42
    lifecycle.cattle.io/create.cluster-agent-controller-cleanup: 'true'
    lifecycle.cattle.io/create.cluster-provisioner-controller: 'true'
    lifecycle.cattle.io/create.cluster-scoped-gc: 'true'
    lifecycle.cattle.io/create.mgmt-cluster-rbac-remove: 'true'
  creationTimestamp: '2023-08-29T03:57:39Z'
  finalizers:
    - wrangler.cattle.io/mgmt-cluster-remove
    - controller.cattle.io/cluster-agent-controller-cleanup
    - controller.cattle.io/cluster-scoped-gc
    - controller.cattle.io/cluster-provisioner-controller
    - controller.cattle.io/mgmt-cluster-rbac-remove
  generateName: c-
  generation: 18
  labels:
    cattle.io/creator: norman
  managedFields:
    - apiVersion: management.cattle.io/v3
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:field.cattle.io/creatorId: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:cattle.io/creator: {}
        f:spec:
          .: {}
          f:displayName: {}
          f:dockerRootDir: {}
          f:eksConfig:
            .: {}
            f:amazonCredentialSecret: {}
            f:displayName: {}
            f:imported: {}
            f:kmsKey: {}
            f:kubernetesVersion: {}
            f:loggingTypes: {}
            f:nodeGroups: {}
            f:privateAccess: {}
            f:publicAccess: {}
            f:publicAccessSources: {}
            f:region: {}
            f:secretsEncryption: {}
            f:securityGroups: {}
            f:serviceRole: {}
            f:subnets: {}
            f:tags: {}
          f:enableClusterAlerting: {}
          f:enableClusterMonitoring: {}
          f:enableNetworkPolicy: {}
          f:internal: {}
          f:windowsPreferedCluster: {}
        f:status:
          .: {}
          f:appliedEnableNetworkPolicy: {}
      manager: Go-http-client
      operation: Update
      time: '2023-08-29T03:57:39Z'
    - apiVersion: management.cattle.io/v3
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:authz.management.cattle.io/creator-role-bindings: {}
            f:lifecycle.cattle.io/create.cluster-agent-controller-cleanup: {}
            f:lifecycle.cattle.io/create.cluster-provisioner-controller: {}
            f:lifecycle.cattle.io/create.cluster-scoped-gc: {}
            f:lifecycle.cattle.io/create.mgmt-cluster-rbac-remove: {}
          f:finalizers:
            .: {}
            v:"controller.cattle.io/cluster-agent-controller-cleanup": {}
            v:"controller.cattle.io/cluster-provisioner-controller": {}
            v:"controller.cattle.io/cluster-scoped-gc": {}
            v:"controller.cattle.io/mgmt-cluster-rbac-remove": {}
            v:"wrangler.cattle.io/mgmt-cluster-remove": {}
        f:spec:
          f:agentImageOverride: {}
          f:answers: {}
          f:clusterSecrets: {}
          f:description: {}
          f:desiredAgentImage: {}
          f:desiredAuthImage: {}
          f:fleetWorkspaceName: {}
          f:localClusterAuthEndpoint:
            .: {}
            f:enabled: {}
        f:status:
          f:agentImage: {}
          f:aksStatus:
            .: {}
            f:privateRequiresTunnel: {}
            f:rbacEnabled: {}
            f:upstreamSpec: {}
          f:allocatable:
            .: {}
            f:cpu: {}
            f:memory: {}
            f:pods: {}
          f:appliedPodSecurityPolicyTemplateId: {}
          f:appliedSpec:
            .: {}
            f:agentImageOverride: {}
            f:answers: {}
            f:clusterSecrets: {}
            f:description: {}
            f:desiredAgentImage: {}
            f:desiredAuthImage: {}
            f:displayName: {}
            f:enableClusterAlerting: {}
            f:enableClusterMonitoring: {}
            f:enableNetworkPolicy: {}
            f:internal: {}
            f:localClusterAuthEndpoint:
              .: {}
              f:enabled: {}
            f:windowsPreferedCluster: {}
          f:authImage: {}
          f:capabilities:
            .: {}
            f:loadBalancerCapabilities: {}
          f:capacity:
            .: {}
            f:cpu: {}
            f:memory: {}
            f:pods: {}
          f:conditions: {}
          f:driver: {}
          f:eksStatus:
            .: {}
            f:generatedNodeRole: {}
            f:managedLaunchTemplateID: {}
            f:managedLaunchTemplateVersions: {}
            f:privateRequiresTunnel: {}
            f:securityGroups: {}
            f:subnets: {}
            f:upstreamSpec: {}
            f:virtualNetwork: {}
          f:gkeStatus:
            .: {}
            f:privateRequiresTunnel: {}
            f:upstreamSpec: {}
          f:limits:
            .: {}
            f:cpu: {}
            f:memory: {}
            f:pods: {}
          f:provider: {}
          f:requested:
            .: {}
            f:cpu: {}
            f:memory: {}
            f:pods: {}
      manager: rancher
      operation: Update
      time: '2023-08-29T03:57:40Z'
  name: c-6lpps
  resourceVersion: '117625075'
  uid: 5732a79d-1aed-4dc3-a87b-538b558d74a1
spec:
  agentImageOverride: ''
  answers: {}
  clusterSecrets: {}
  description: ''
  desiredAgentImage: ''
  desiredAuthImage: ''
  displayName: aws-eks1
  dockerRootDir: /var/lib/docker
  eksConfig:
    amazonCredentialSecret: cattle-global-data:cc-8k2qc
    displayName: aws-eks1
    imported: false
    kmsKey: ''
    kubernetesVersion: '1.25'
    loggingTypes: []
    nodeGroups:
      - desiredSize: 2
        diskSize: 20
        ec2SshKey: AWS_RGS_1Pass
        gpu: true
        imageId: ami-042cd2fd384327f78
        instanceType: ''
        labels: {}
        launchTemplate: null
        maxSize: 2
        minSize: 2
        nodeRole: ''
        nodegroupName: rancher-eks1
        requestSpotInstances: true
        resourceTags: {}
        spotInstanceTypes:
          - c5.xlarge
        subnets: []
        tags: {}
        userData: ''
        version: '1.25'
    privateAccess: false
    publicAccess: true
    publicAccessSources: []
    region: us-east-1
    secretsEncryption: false
    securityGroups: []
    serviceRole: ''
    subnets: []
    tags: {}
  enableClusterAlerting: false
  enableClusterMonitoring: false
  enableNetworkPolicy: false
  fleetWorkspaceName: fleet-default
  internal: false
  localClusterAuthEndpoint:
    enabled: false
  windowsPreferedCluster: false
status:
  agentImage: ''
  aksStatus:
    privateRequiresTunnel: null
    rbacEnabled: null
    upstreamSpec: null
  allocatable:
    cpu: '0'
    memory: '0'
    pods: '0'
  appliedEnableNetworkPolicy: false
  appliedPodSecurityPolicyTemplateId: ''
  appliedSpec:
    agentImageOverride: ''
    answers: {}
    clusterSecrets: {}
    description: ''
    desiredAgentImage: ''
    desiredAuthImage: ''
    displayName: ''
    enableClusterAlerting: false
    enableClusterMonitoring: false
    enableNetworkPolicy: null
    internal: false
    localClusterAuthEndpoint:
      enabled: false
    windowsPreferedCluster: false
  authImage: ''
  capabilities:
    loadBalancerCapabilities: {}
  capacity:
    cpu: '0'
    memory: '0'
    pods: '0'
  conditions:
    - lastUpdateTime: ''
      status: 'True'
      type: Pending
    - lastUpdateTime: ''
      status: Unknown
      type: Provisioned
    - lastUpdateTime: '2023-08-29T03:57:40Z'
      message: Waiting for API to be available
      status: Unknown
      type: Waiting
    - lastUpdateTime: '2023-08-29T03:57:39Z'
      status: 'True'
      type: BackingNamespaceCreated
    - lastUpdateTime: '2023-08-29T03:57:39Z'
      status: 'True'
      type: DefaultProjectCreated
    - lastUpdateTime: '2023-08-29T03:57:39Z'
      status: 'True'
      type: SystemProjectCreated
    - lastUpdateTime: '2023-08-29T03:57:40Z'
      status: 'True'
      type: InitialRolesPopulated
    - lastUpdateTime: '2023-08-29T03:57:40Z'
      status: 'True'
      type: CreatorMadeOwner
    - lastUpdateTime: '2023-08-29T03:57:40Z'
      status: 'True'
      type: NoDiskPressure
    - lastUpdateTime: '2023-08-29T03:57:40Z'
      status: 'True'
      type: NoMemoryPressure
    - lastUpdateTime: '2023-08-29T03:57:40Z'
      status: 'True'
      type: SecretsMigrated
    - lastUpdateTime: '2023-08-29T03:57:40Z'
      status: 'True'
      type: ServiceAccountSecretsMigrated
    - lastUpdateTime: '2023-08-29T03:57:40Z'
      status: 'True'
      type: RKESecretsMigrated
    - lastUpdateTime: '2023-08-29T03:57:40Z'
      status: 'True'
      type: ACISecretsMigrated
    - lastUpdateTime: '2023-08-29T03:57:42Z'
      status: 'False'
      type: Connected
  driver: EKS
  eksStatus:
    generatedNodeRole: ''
    managedLaunchTemplateID: ''
    managedLaunchTemplateVersions: null
    privateRequiresTunnel: null
    securityGroups: null
    subnets: null
    upstreamSpec: null
    virtualNetwork: ''
  gkeStatus:
    privateRequiresTunnel: null
    upstreamSpec: null
  limits:
    cpu: '0'
    memory: '0'
    pods: '0'
  provider: ''
  requested:
    cpu: '0'
    memory: '0'
    pods: '0'
