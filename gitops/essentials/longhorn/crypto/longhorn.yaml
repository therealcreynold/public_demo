---
apiVersion: v1
kind: Secret
metadata:
  name: longhorn-crypto
  namespace: longhorn-system
stringData:
  CRYPTO_KEY_VALUE: "yg9fm3vnluyr4z7b4pz4ukue1mbwbegjnz84biw5vyf6usx89ew2dlyma203gb2s"
  CRYPTO_KEY_PROVIDER: "secret"

---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: longhorn-crypto-global
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  numberOfReplicas: "3"
  staleReplicaTimeout: "2880" # 48 hours in minutes
  fromBackup: ""
  encrypted: "true"
  # global secret that contains the encryption key that will be used for all volumes
  csi.storage.k8s.io/provisioner-secret-name: "longhorn-crypto"
  csi.storage.k8s.io/provisioner-secret-namespace: "longhorn-system"
  csi.storage.k8s.io/node-publish-secret-name: "longhorn-crypto"
  csi.storage.k8s.io/node-publish-secret-namespace: "longhorn-system"
  csi.storage.k8s.io/node-stage-secret-name: "longhorn-crypto"
  csi.storage.k8s.io/node-stage-secret-namespace: "longhorn-system"
---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: longhorn-volv-pvc
# spec:
#   accessModes:
#     - ReadWriteOnce
#   storageClassName: longhorn-crypto-global
#   resources:
#     requests:
#       storage: 2Gi

# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: volume-test
#   namespace: default
# spec:
#   containers:
#   - name: volume-test
#     image: nginx:stable-alpine
#     imagePullPolicy: IfNotPresent
#     volumeMounts:
#     - name: volv
#       mountPath: /data
#     ports:
#     - containerPort: 80
#   volumes:
#   - name: volv
#     persistentVolumeClaim:
#       claimName: longhorn-volv-pvc